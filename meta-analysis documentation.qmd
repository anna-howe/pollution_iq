---
title: "Meta-analysis: Pollution and IQ"
author:
  name: "Anna Howe"
  affiliation: "University of Canterbury"
date-modified: last-modified
date: today

from: markdown+emoji
format:
  html:
    toc: true
    code-fold: false
    link-external-newwindow: true
theme:
  light: flatly
  dark: darkly

---

This page is designed to provide detail on the meta-analysis undertaken for the review "Air pollution (PM2.5 and NO2) exposure and child IQ: a systematic review and meta-analysis of prospective and longitudinal evidence"

# Meta-analysis Model Assumptions

## Fixed-effects model

Assumes that all effect sizes stem from a single, homogeneous population, i.e. all studies share the same true effect size. Thus any deviation from the overall effect size by any given study is because of sampling error. Hence why the effect is fixed. Can also be referred to as "equal effects" or "common effect".

Studies with a small standard error, numerical representation of sampling error, should be better estimators of the true overall effect than studies with large standard errors. Pooled effects in meta-analyses give effect sizes with smaller standard errors (e.g. higher precision) a greater weight, inverse-variance weighting.

## Random-effects model

It might be unrealistic to assume studies in a meta-analysis are always completely homogeneous, e.g. the study of interest might be measured in different ways, or the length of exposure varies, or the target populations are not identical. In such cases there may be considerable between-study heterogeneity in the true effects. The random-effects model assumes effects of individual studies differ not only in sampling error alone but in other sources of variance.

The random-effects model assumes there is not only one true effect size but a distribution of true effect sizes, therefore the model estimates the mean of the distribution of true effects. This model does, however, give more attention to small studies when calculating the pooled effect than the fixed-effects model.

### Estimators of the Between-Study Heterogeneity
The I2 statistic (J. P. Higgins and Thompson 2002) quantifies between-study heterogeneity, and is directly based on Cochran’s Q. It is defined as the percentage of variability in the effect sizes that is not caused by sampling error. 
An I2 value of approximately 50% indicates that about half of the variation is due to between-study heterogeneity.

The “rule of thumb” for interpreting this statistic is (J. P. Higgins and Thompson 2002):
    I2 = 25%: low heterogeneity
    I2 = 50%: moderate heterogeneity
    I2 = 75%: substantial heterogeneity.
    
The H2 statistic (J. P. Higgins and Thompson 2002) is also derived from Cochran’s Q, and
similar to I2. When there is no between-study heterogeneity, H2 equals one (or smaller).
Values greater than one indicate the presence of between-study heterogeneity. Compared to
I2, it is far less common to find this statistic reported in published meta-analyses. 

## 

Due to the aprior assumption the studies included in this review lack study homogeneity a random-effects model is preferred however, if heterogeneity is found to be less than 50%, models will be run with fixed-effects.

# Definition of R model terms

- TE = specifies the effect size variable 
- lower = specifies variable that contains the lower limit of confidence interval 
- upper = specifies variable that contains the upper limit of confidence interval 
- studlab = study/article label 
- sm = summary measure 
- common = indicates a fixed-effects model should be run 
- random = indicates a random-effects model should be run 
- method.tau = defines the r2 estimator 
  - "DL", DerSimonian-Laird estimator (DerSimonian and Laird, 1986)
- method.random.ci = controls how confidence internals are calculated for the
random-effects model
  - "HK", Method by Hartung and Knapp (2001a/b) based on a refined variance estimator for
  the treatment estimate and a quantile of a t-distribution with k-1 degrees of freedom
  where k corresponds to the number of studies in the meta-analysis. This method has shown
  improved coverage probabilities compared to the classic random effects method (default).
- ad.hoc.ci = ad hoc correction for the Hartung-Knapp (HK) method because in rare settings
with very homogeneous treatment estimates, the Hartung-Knapp variance estimate can be
arbitrarily small resulting in a very narrow confidence interval (Knapp and Hartung, 2003; Wiksten et al., 2016). An ad hoc variance correction has been proposed by utilising the variance estimate from the classic random effects model with the Hartung-Knapp method.as
  - "se", use variance correction if HK standard error is smaller than standard error from
  classic random effects meta-analysis (Knapp and Hartung, 2003).
- method.tau.ci = calculates a confidence interval for τ2 and τ
  - "J", Jackson method recommended for DerSimonian-Laird estimator of τ2
- method.I2 = method to estimate the I-squared statistic
  - "Q", based on heterogeneity statistic Q
- data = data table to undertake analysis with

# Packages and Libraries {.unlisted .hidden}

```{r}
#| title: Libraries
#| include: false

if (!require("pacman")) install.packages("pacman"); library(pacman)

pacman::p_load(quarto, knitr, tidyverse, dplyr, reshape2, readxl, ggplot2, meta, metasens) 
# Install & load packages
```

# Data Wrangling

Chiu et al - sex differences reported with SE and converted to confidence intervals with formula
$\mathrm{CI_h=\bar{x}+SE⋅1.95996}$

Ni et al - ppb for NO2 converted to ug/m3 using an online converter
(https://www.wkcgroup.com/tools-room/micrograms-per-cubic-meter-parts-per-billion-converter/)

## Create data table {.unlisted .hidden}
```{r}
review_data <- read_xlsx (
path = "C:\\Users\\aho135\\OneDrive - University of Canterbury\\Research\\air quality and IQ metaanalysis data.xlsx",
range = "data!B1:U142")

```

## Create standardised data {.unlisted .hidden}
```{r}

standardised_review_data <- 
  mutate(review_data,
         standardised_effect_size = orig_effect_size * (10/exposure_standard_ugm3),
         standardised_ci_lower = orig_ci_lower * (10/exposure_standard_ugm3),
         standardised_ci_upper = orig_ci_upper * (10/exposure_standard_ugm3)) 

standardised_review_data <- standardised_review_data |>
  mutate(across(c('standardised_effect_size','standardised_ci_lower',
                  'standardised_ci_upper'), round, 2))

```
## Standardised Data
```{r}
knitr::kable(standardised_review_data)
```

# Overall Meta-analysis 

## Run meta-analysis for PM {.unlisted .hidden}
```{r}
### Pre-natal exposure (entire pregnancy)

pm_total_pre_preg_data <- standardised_review_data |>
  filter(exposure == "PM2.5" & exposure_level != "NA" & sample == "Total" & exposure_period == "pre-natal" 
         & (exposure_time == "Pregnancy" | exposure_time == "Averaged over entire pregnancy") & reference != 3)  

m.pm_total_pre_preg=(metagen(TE = standardised_effect_size, lower=standardised_ci_lower,
               upper=standardised_ci_upper,
               studlab = study,
               #prediction = exposure_level,
               sm = "Effect Size",
               common = FALSE,
               random = TRUE,
               method.tau = "DL",
               method.random.ci = "HK",
               method.predict = "HK",
               method.tau.ci = "J", #Jackson method recommended for DerSimonian-Laird 
                                    #estimator of τ2
               method.I2 = "Q",
               data = pm_total_pre_preg_data))

### Pre-natal exposure, by sex (entire pregnancy)

pm_sex_pre_preg_data <- standardised_review_data |>
  filter(exposure == "PM2.5" & exposure_level != "NA" & sample != "Total" & exposure_period == "pre-natal" 
         & (exposure_time == "Pregnancy" | exposure_time == "Averaged over entire pregnancy") & reference != 3)  

m.pm_sex_pre_preg=(metagen(TE = standardised_effect_size, lower=standardised_ci_lower,
               upper=standardised_ci_upper,
               studlab = study,
               subgroup = sample,
               #prediction = exposure_level,
               sm = "Effect Size",
               common = FALSE,
               random = TRUE,
               method.tau = "DL",
               method.random.ci = "HK",
               method.predict = "HK",
               method.tau.ci = "J", #Jackson method recommended for DerSimonian-Laird 
                                    #estimator of τ2
               method.I2 = "Q",
               data = pm_sex_pre_preg_data))

### Pre-natal exposure, by iq test (entire pregnancy)

m.pm_iq_pre_preg=(metagen(TE = standardised_effect_size, lower=standardised_ci_lower,
               upper=standardised_ci_upper,
               studlab = study,
               subgroup = iq_wechsler,
               #prediction = exposure_level,
               sm = "Effect Size",
               common = FALSE,
               random = TRUE,
               method.tau = "DL",
               method.random.ci = "HK",
               method.predict = "HK",
               method.tau.ci = "J", #Jackson method recommended for DerSimonian-Laird 
                                    #estimator of τ2
               method.I2 = "Q",
               data = pm_total_pre_preg_data))


### Pre-natal exposure, by statistical model (entire pregnancy)

m.pm_model_pre_preg=(metagen(TE = standardised_effect_size, lower=standardised_ci_lower,
               upper=standardised_ci_upper,
               studlab = study,
               subgroup = model_distributed,
               #prediction = exposure_level,
               sm = "Effect Size",
               common = FALSE,
               random = TRUE,
               method.tau = "DL",
               method.random.ci = "HK",
               method.predict = "HK",
               method.tau.ci = "J", #Jackson method recommended for DerSimonian-Laird 
                                    #estimator of τ2
               method.I2 = "Q",
               data = pm_total_pre_preg_data))


### Pre-natal exposure, by age tested (entire pregnancy)

m.pm_age_pre_preg=(metagen(TE = standardised_effect_size, lower=standardised_ci_lower,
               upper=standardised_ci_upper,
               studlab = study,
               subgroup = age_period_tested,
               #prediction = exposure_level,
               sm = "Effect Size",
               common = FALSE,
               random = TRUE,
               method.tau = "DL",
               method.random.ci = "HK",
               method.predict = "HK",
               method.tau.ci = "J", #Jackson method recommended for DerSimonian-Laird 
                                    #estimator of τ2
               method.I2 = "Q",
               data = pm_total_pre_preg_data))



### Pre-natal exposure by trimester

pm_total_pre_tri_data <- standardised_review_data |>
  filter(exposure == "PM2.5" & exposure_level != "NA" & sample == "Total" & exposure_period == "pre-natal" 
         & (exposure_time == "1st trimester" | exposure_time == "2nd trimester" | exposure_time == "3rd trimester") & reference != 3)

m.pm_total_pre_tri=(metagen(TE = standardised_effect_size, lower=standardised_ci_lower,
               upper=standardised_ci_upper,
               studlab = study,
               subgroup = exposure_time,
               #prediction = exposure_level,
               sm = "Effect Size",
               common = FALSE,
               random = TRUE,
               method.tau = "DL",
               method.random.ci = "HK",
               method.predict = "HK",
               method.tau.ci = "J", #Jackson method recommended for DerSimonian-Laird 
                                    #estimator of τ2
               method.I2 = "Q",
               data = pm_total_pre_tri_data))


```
## Summarise meta output for PM2.5
```{r}
summary(m.pm_total_pre_preg)
summary(m.pm_sex_pre_preg)
summary (m.pm_total_pre_tri)
```
## Run meta-analysis for NO2 {.unlisted .hidden}
```{r}
standardised_no2_data <- standardised_review_data |>
  filter(exposure == "NO2" & exposure_standard_ugm3 != "NA" & sample == "Total")

m.no2_overall=(metagen(TE = standardised_effect_size, lower=standardised_ci_lower,
               upper=standardised_ci_upper,
               studlab = study,
               #prediction = exposure_level,
               sm = "Effect Size",
               common = FALSE,
               random = TRUE,
               method.tau = "DL",
               method.random.ci = "HK",
               method.predict = "HK",
               method.tau.ci = "J", #Jackson method recommended for DerSimonian-Laird 
                                    #estimator of τ2
               method.I2 = "Q",
               data = standardised_no2_data))

```
## Summarise meta output for No2
```{r}
summary(m.pm_total_pre_preg)
```


## PM2.5 Forest Plots - total sample {.tabset}
:::{.panel-tabset}
# Pre-natal exposure (entire pregnancy)
```{r}
    forest(m.pm_total_pre_preg,
       sortvar = TE,
       prediction = TRUE,
       print.tau2 = FALSE,
       print.I2 = TRUE,
       print.I2.ci = TRUE,
       leftcols = c("studlab", "statistic", "pval", "seTE", "w.random"),
       leftlabs = c("Study", "I2", "P", "SE", "Weight"),
       rightcols = c("effect.ci"),
       fontsize = 6,
       spacing = 0.5,
       title = "Forest Plot for pre-natal PM2.5 exposure, for the total sample as a measure of the entire pregnancy")
```

# Pre-natal exposure by sex (entire pregnancy)
```{r}
    forest(m.pm_sex_pre_preg,
       sortvar = TE,
       prediction = TRUE,
       print.tau2 = FALSE,
       print.I2 = TRUE,
       print.I2.ci = TRUE,
       leftcols = c("studlab", "statistic", "pval", "seTE", "w.random"),
       leftlabs = c("Study", "I2", "P", "SE", "Weight"),
       rightcols = c("effect.ci"),
       fontsize = 6,
       spacing = 0.5,
       title = "Forest Plot for pre-natal PM2.5 exposure, by sex as a measure of the entire pregnancy")
```

# Pre-natal exposure by iq test (entire pregnancy)
```{r}
    forest(m.pm_iq_pre_preg,
       sortvar = TE,
       prediction = TRUE,
       print.tau2 = FALSE,
       print.I2 = TRUE,
       print.I2.ci = TRUE,
       leftcols = c("studlab", "statistic", "pval", "seTE", "w.random"),
       leftlabs = c("Study", "I2", "P", "SE", "Weight"),
       rightcols = c("effect.ci"),
       fontsize = 6,
       spacing = 0.5,
       title = "Forest Plot for pre-natal PM2.5 exposure, by iq measure as a measure of the entire pregnancy")
```

# Pre-natal exposure by statistical model (entire pregnancy)
```{r}
    forest(m.pm_model_pre_preg,
       sortvar = TE,
       prediction = TRUE,
       print.tau2 = FALSE,
       print.I2 = TRUE,
       print.I2.ci = TRUE,
       leftcols = c("studlab", "statistic", "pval", "seTE", "w.random"),
       leftlabs = c("Study", "I2", "P", "SE", "Weight"),
       rightcols = c("effect.ci"),
       fontsize = 6,
       spacing = 0.5,
       title = "Forest Plot for pre-natal PM2.5 exposure, by statistical model as a measure of the entire pregnancy")
```

# Pre-natal exposure by age period tested (entire pregnancy)
```{r}
    forest(m.pm_age_pre_preg,
       sortvar = TE,
       prediction = TRUE,
       print.tau2 = FALSE,
       print.I2 = TRUE,
       print.I2.ci = TRUE,
       leftcols = c("studlab", "statistic", "pval", "seTE", "w.random"),
       leftlabs = c("Study", "I2", "P", "SE", "Weight"),
       rightcols = c("effect.ci"),
       fontsize = 6,
       spacing = 0.5,
       title = "Forest Plot for pre-natal PM2.5 exposure, by age period tested as a measure of the entire pregnancy")
```

# Pre-natal exposure by trimester
```{r}
    forest(m.pm_total_pre_tri,
       sortvar = TE,
       prediction = TRUE,
       print.tau2 = FALSE,
       print.I2 = TRUE,
       print.I2.ci = TRUE,
       leftcols = c("studlab", "statistic", "pval", "seTE", "w.random"),
       leftlabs = c("Study", "I2", "P", "SE", "Weight"),
       rightcols = c("effect.ci"),
       fontsize = 6,
       spacing = 0.5,
       title = "Forest Plot for pre-natal PM2.5 exposure, for the total sample by pregnancy trimester")
```
:::

## NO2 Forest Plots {.tabset}
:::{.panel-tabset}

# NO2 - Overall, random-effects
```{r}
    forest(m.no2_overall,
       sortvar = TE,
       prediction = TRUE,
       print.tau2 = FALSE,
       print.I2 = TRUE,
       print.I2.ci = TRUE,
       leftcols = c("studlab", "statistic", "pval", "seTE", "w.random"),
       leftlabs = c("Study", "I2", "P", "SE", "Weight"),
       rightcols = c("effect.ci"),
       fontsize = 6,
       spacing = 0.5,
       title = "Forest Plot for NO2")
```


:::

# Questions for Matt

-   [] Ni et al 2022 
        -   You extracted model three data from Table 4 for everything except the 1st trimester where Model
            two was extracted - is this correct? 
        -   Have updated to model three.
-   [] Tokuda et al 2023 
        -   Why have you not extracted the trimester data?
        -   Why was the parts per ug/m3 not included? Text indicates change is per IQR which is available in Table 3.
        -   Have updated to include this information.
        
-   [] Wang et al 2017
        -   updated IQR range of exposure from 7.3 to 7.73.

-   [] Loftus et al 2019 "Prenatal air pollution and childhood ID: Preliminary evidence of effect modification by folate"
        - some how I ended up with this paper printed out but can't find it in your list of included or excluded papers?
        
-   [] Have extracted extra data from the figures using Web Plot Digitizer (https://apps.automeris.io/wpd4/)
        - include or exclude these data?
        
-   [] Have converted some standard error data to 95% CI and PPB to ug/m3
        - include or exclude these data?

# To do

-   [x] Get data from MH

-   [x] Import data into R

-   [x] Standardised effect sizes & associated CIs

-   [x] Run overall meta-analysis models

-   [] Run meta-analysis models by exposure time

-   [] Include risk of bias and sample size for each study?

# Useful links

[Doing Meta-Analysis with R: A Hands-On Guide](https://bookdown.org/MathiasHarrer/Doing_Meta_Analysis_in_R/) - very useful resource for undertaking a meta-analysis using R.

---
